
package web;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SimpleWebService", targetNamespace = "http://web/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SimpleWebService {


    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "makeOrder", targetNamespace = "http://web/", className = "web.MakeOrder")
    @ResponseWrapper(localName = "makeOrderResponse", targetNamespace = "http://web/", className = "web.MakeOrderResponse")
    @Action(input = "http://web/SimpleWebService/makeOrderRequest", output = "http://web/SimpleWebService/makeOrderResponse")
    public void makeOrder(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        boolean arg2);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllDishes", targetNamespace = "http://web/", className = "web.GetAllDishes")
    @ResponseWrapper(localName = "getAllDishesResponse", targetNamespace = "http://web/", className = "web.GetAllDishesResponse")
    @Action(input = "http://web/SimpleWebService/getAllDishesRequest", output = "http://web/SimpleWebService/getAllDishesResponse")
    public List<String> getAllDishes();

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllOrders", targetNamespace = "http://web/", className = "web.GetAllOrders")
    @ResponseWrapper(localName = "getAllOrdersResponse", targetNamespace = "http://web/", className = "web.GetAllOrdersResponse")
    @Action(input = "http://web/SimpleWebService/getAllOrdersRequest", output = "http://web/SimpleWebService/getAllOrdersResponse")
    public List<String> getAllOrders();

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllClients", targetNamespace = "http://web/", className = "web.GetAllClients")
    @ResponseWrapper(localName = "getAllClientsResponse", targetNamespace = "http://web/", className = "web.GetAllClientsResponse")
    @Action(input = "http://web/SimpleWebService/getAllClientsRequest", output = "http://web/SimpleWebService/getAllClientsResponse")
    public List<String> getAllClients();

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "inintRecord", targetNamespace = "http://web/", className = "web.InintRecord")
    @ResponseWrapper(localName = "inintRecordResponse", targetNamespace = "http://web/", className = "web.InintRecordResponse")
    @Action(input = "http://web/SimpleWebService/inintRecordRequest", output = "http://web/SimpleWebService/inintRecordResponse")
    public void inintRecord();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllOrdersForClient", targetNamespace = "http://web/", className = "web.GetAllOrdersForClient")
    @ResponseWrapper(localName = "getAllOrdersForClientResponse", targetNamespace = "http://web/", className = "web.GetAllOrdersForClientResponse")
    @Action(input = "http://web/SimpleWebService/getAllOrdersForClientRequest", output = "http://web/SimpleWebService/getAllOrdersForClientResponse")
    public List<String> getAllOrdersForClient(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAcceptedOrders", targetNamespace = "http://web/", className = "web.GetAcceptedOrders")
    @ResponseWrapper(localName = "getAcceptedOrdersResponse", targetNamespace = "http://web/", className = "web.GetAcceptedOrdersResponse")
    @Action(input = "http://web/SimpleWebService/getAcceptedOrdersRequest", output = "http://web/SimpleWebService/getAcceptedOrdersResponse")
    public List<String> getAcceptedOrders();

}
